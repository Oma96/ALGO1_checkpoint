ALGORITHM solution1
var
tab1, tab2: ARRAY_OF INTEGER[10];
i, j, sum: INTEGER;
exist:BOOLEAN

BEGIN

sum:=0;
  FOR i FROM 0 TO tab1.length-1 DO
      exist:= FALSE;
     FOR j FROM 0 TO tab2.length-1  DO
          IF (tab1[i]=tab2[j]) THEN
              exist:= TRUE;
               BREAK;
          END_IF
      END_FOR
        IF exist:= FALSE THEN
           sum:= sum+ tab1[i] 
         END_IF 
  END_FOR  


  // add elements from the second ARRAY

  FOR i FROM 0 TO tab2.length-1  DO
     exist:= false
     FOR j FROM 0 TO tab1.length-1  DO
          IF (tab2[i]=tab1[j]) THEN
           exist:= true
           BREAK;
           END_IF
      END_FOR
        IF exist:= false THEN
            sum:= sum+ tab2[i] 
       END_IF
 END_FOR 
 write(sum);

END

ALGORITHM solution2

var
tab1, tab2: ARRAY_OF INTEGER[20]
keys: ARRAY_OF INTEGER[40]
table: HASH_TABLE<INTEGER,INTEGER>
i,count,sum : INTEGER;

BEGIN

FOR i FROM 0 TO tab1.length-1 STEP 1 DO
    IF (table.lookup(tab1[i]) =TRUE) THEN
        count:= table.get(tab1[i]);
        table.insert(tab1[i],count+1)
    ELSE 
        table.insert(tab1[i],1)
    END_IF
END_FOR

FOR i FROM 0 TO tab2.length-1 STEP 1 DO
    IF (table.lookup(tab2[i]) =TRUE) THEN
        count:= table.get(tab2[i]);
        table.insert(tab2[i],count+1)
    ELSE 
        table.insert(tab2[i],1)
    END_IF
END_FOR

sum:=0
keys:= table.getKeys()
 FOR i FROM 0 TO keys.length -1 STEP 1  DO
        IF (table.get(keys[i]) = 1) THEN
            sum := sum + keys[i];
        END_IF
    END_FOR

END



